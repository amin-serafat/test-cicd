name: Docker Image CI

on:
  push:
    branches:
      - main
  create:
    tags:
      - '*' 
  workflow_dispatch:
    inputs:
      name:
        description: 'Test'
        required: true
        default: 'Test'

jobs:
  main:
    runs-on: ubuntu-latest
    environment: docker_secret

    if: ${{ github.event_name == 'push'}} && ${{ github.event_name == 'create'}}
    steps:
# Clone main repository
      - uses: actions/checkout@v2
# Clone repository with scrip
      - uses: actions/checkout@v2
        with:
          repository: amin-serafat/test-scripts
          token: ${{ secrets.ACCESS_TOKEN }}
          path: test-scripts
# Start workflow_dispatch
          - name: Start workflow_dispatch
          - run: |
            echo "Hello ${{ github.event.inputs.name }}!"
# Getting variables from pipline_conf
      - name: Get secrets
        run: |
          cat ./pipeline_conf
          ./test-scripts/pars.sh
# Creating hash and branch version name if we did push to main branch
      - name: Application version
        if: ${{ github.event_name == 'push' }}
        run: |
          ./test-scripts/app_version.sh
# Creating tag version name if we created tag
      - name: Tag version
        if: ${{ github.event_name == 'create' }}
        run: |
          ./test-scripts/tag_version.sh
# Build docker image
      - name: docker build Dockerfile
        run: |
          echo "---BUILD IMAGE DOCKER---"
          ./test-scripts/build.sh
# Login to DockerHub
      - uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
# Push image to the repository
      - name: docker push
        run: |
          echo "---PUSH IMAGE TO DOCKERHUB---"
          ./test-scripts/push.sh
# Check trigger 
      - name: Proccess stop if trigger is push or tag
        if: ${{ github.event_name == 'push'}} && ${{ github.event_name == 'create'}}
        run: |
          echo "---Proccess is stopped---"
          exit 1
# Pull and deploy image 
      - name: Docker pull and deploy
        run: |
          echo "---PULL IMAGE FROM DOCKERHUB---"
          ./test-scripts/pull.sh
# Deploy docker image
      - name: Deploy docker image
        run: |
          chmod 755 ./test-scripts/run.sh
          ./test-scripts/run.sh
